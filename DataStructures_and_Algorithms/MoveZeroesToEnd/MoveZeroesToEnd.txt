public void moveZeros(int[] arr, int n) {
    int j = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] != 0 && arr[j] == 0) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
        if (arr[j] != 0) {
            j++;
        }
    }
}
---------------------

 mảng arr[] và kích thước của nó n.
Biến j được khởi tạo bằng 0. Biến này giữ vị trí mà phần tử khác không tiếp theo sẽ được đặt vào.

Vòng lặp chạy từ i = 0 đến i < n
Với mỗi phần tử arr[i], thuật toán kiểm tra hai điều kiện:
arr[i] != 0: Kiểm tra xem phần tử hiện tại có khác không hay không.
arr[j] == 0: Kiểm tra xem phần tử tại vị trí j có bằng 0 hay không.
Hoán đổi các phần tử

Nếu cả hai điều kiện đều đúng (nghĩa là arr[i] khác không và arr[j] bằng 0 hoán đổi arr[i] và arr[j].
Điều này di chuyển phần tử khác không từ arr[i] sang arr[j] và số 0 từ arr[j] sang arr[i].
Tăng giá trị của j

Sau khi hoán đổi hoặc nếu phần tử tại arr[j] đã khác không con trỏ j sẽ được tăng lên
exx
 mảng [0, 1, 0, 3, 12] và n = 5:

Ban đầu, j = 0.
Vòng lặp lặp qua từng phần tử:
i = 0: arr[0] là 0, nên không có hoán đổi và j vẫn là 0.
i = 1: arr[1] là 1 (khác không) và arr[0] là 0. Vì vậy, hoán đổi arr[1] và arr[0], kết quả là [1, 0, 0, 3, 12] ==>tăng j êln 1.
i = 2: arr[2] là 0, nên không có hoán đổi và j vẫn là 1.
i = 3: arr[3] là 3 (khác không) và arr[1] là 0. Vì vậy, hoán đổi arr[3] và arr[1], kết quả là [1, 3, 0, 0, 12]. ==> tăng j lên 2.
i = 4: arr[4] là 12 (khác không) và arr[2] là 0. Vì vậy, hoán đổi arr[4] và arr[2], kết quả là [1, 3, 12, 0, 0]. ==>tăng j lên 3.
